{"version":3,"file":"issues-list.min.js","sources":["../src/issues-list.js"],"sourcesContent":["// This file is part of the tool_certificate plugin for Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module used when viewing the list of issued certificates\n *\n * @module     tool_certificate/issues-list\n * @copyright  2019 Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Notification from 'core/notification';\nimport {get_strings as getStrings, get_string as getString} from 'core/str';\nimport Ajax from 'core/ajax';\nimport ModalForm from 'core_form/modalform';\nimport {add as toastAdd} from 'core/toast';\nimport {refreshTableContent, getFilters, setFilters} from 'core_table/dynamic';\nimport * as DynamicTableSelectors from 'core_table/local/dynamic/selectors';\nimport Pending from 'core/pending';\n\nconst SELECTORS = {\n    ADDISSUE: \"[data-element='addbutton']\",\n    REGENERATEFILE: \"[data-action='regenerate']\",\n    REVOKEISSUE: \"[data-action='revoke']\",\n    GROUPFORM: \".groupselector form\",\n    GROUPSELECTOR: \"select[name='group']\"\n};\n\n/**\n * Add issue dialogue\n * @param {Element} element\n */\nconst addIssue = function(element) {\n    const modal = new ModalForm({\n        formClass: 'tool_certificate\\\\form\\\\certificate_issues',\n        args: {tid: element.dataset.tid},\n        modalConfig: {title: getString('issuecertificates', 'tool_certificate'), scrollable: false},\n        saveButtonText: getString('save'),\n        returnFocus: element,\n    });\n    modal.addEventListener(modal.events.FORM_SUBMITTED, event => {\n        const issuescreated = parseInt(event.detail, 10);\n        if (issuescreated > 1) {\n            toastAdd(getString('aissueswerecreated', 'tool_certificate', issuescreated));\n            reloadReport();\n        } else if (issuescreated === 1) {\n            toastAdd(getString('oneissuewascreated', 'tool_certificate'));\n            reloadReport();\n        } else {\n            toastAdd(getString('noissueswerecreated', 'tool_certificate'));\n        }\n    });\n    modal.show();\n};\n\n/**\n * Revoke issue\n * @param {Element} element\n */\nconst revokeIssue = function(element) {\n    let pendingPromise;\n    const triggerElement = element.closest('.dropdown').querySelector('.dropdown-toggle');\n    getStrings([\n        {key: 'confirm', component: 'moodle'},\n        {key: 'revokecertificateconfirm', component: 'tool_certificate'},\n        {key: 'revoke', component: 'tool_certificate'},\n    ]).then(([title, question, saveLabel]) => {\n        return Notification.saveCancelPromise(title, question, saveLabel, {triggerElement});\n    }).then(() => {\n        pendingPromise = new Pending('tool_certificate/revokeIssue');\n        return Ajax.call([\n            {methodname: 'tool_certificate_revoke_issue', args: {id: element.dataset.id}}\n        ])[0];\n    }).then(() => {\n        reloadReport();\n        return pendingPromise.resolve();\n    }).catch((e) => {\n        if (e.type === 'modal-save-cancel:cancel') {\n            // Clicked cancel.\n            return;\n        }\n        Notification.exception(e);\n    });\n};\n\n/**\n * Revoke issue\n * @param {Element} element\n */\nconst regenerateIssueFile = function(element) {\n    const triggerElement = element.closest('.dropdown').querySelector('.dropdown-toggle');\n    getStrings([\n        {key: 'confirm', component: 'moodle'},\n        {key: 'regeneratefileconfirm', component: 'tool_certificate'},\n        {key: 'regenerate', component: 'tool_certificate'},\n    ]).then(([title, question, saveLabel]) => {\n        return Notification.saveCancelPromise(title, question, saveLabel, {triggerElement});\n    }).then(() => {\n        return Ajax.call([\n            {methodname: 'tool_certificate_regenerate_issue_file', args: {id: element.dataset.id}}\n        ]);\n    }).then(() => {\n        return reloadReport();\n    }).catch((e) => {\n        if (e.type === 'modal-save-cancel:cancel') {\n            // Clicked cancel.\n            return;\n        }\n        Notification.exception(e);\n    });\n};\n\n/**\n * Reload report\n * @returns {Promise}\n */\nvar reloadReport = function() {\n    const report = document.querySelector(DynamicTableSelectors.main.region);\n    return refreshTableContent(report).catch(Notification.exception);\n};\n\n/**\n * Change group and refresh table\n * @param {Event} e\n */\nconst changeGroup = function(e) {\n    const report = document.querySelector(DynamicTableSelectors.main.region);\n    let filters = getFilters(report);\n    let params = JSON.parse(filters.filters.parameters.values[0]);\n    params.groupid = e.target.value;\n    filters.filters.parameters.values[0] = JSON.stringify(params);\n    setFilters(report, filters);\n};\n\n/**\n * Init page\n */\nexport function init() {\n    document.addEventListener('click', event => {\n\n        // Add issue.\n        const addIssueElement = event.target.closest(SELECTORS.ADDISSUE);\n        if (addIssueElement) {\n            event.preventDefault();\n            addIssue(addIssueElement);\n        }\n\n        // Revoke issue.\n        const revokeIssueElement = event.target.closest(SELECTORS.REVOKEISSUE);\n        if (revokeIssueElement) {\n            event.preventDefault();\n            revokeIssue(revokeIssueElement);\n        }\n\n        // Regenerate file.\n        const regenerateFileElement = event.target.closest(SELECTORS.REGENERATEFILE);\n        if (regenerateFileElement) {\n            event.preventDefault();\n            regenerateIssueFile(regenerateFileElement);\n        }\n    });\n\n    const groupform = document.querySelector(SELECTORS.GROUPFORM);\n    if (groupform) {\n        // Flush existing event listeners.\n        const node = groupform.cloneNode(true);\n        groupform.replaceWith(node);\n        // Add event handler.\n        node.querySelector(SELECTORS.GROUPSELECTOR).addEventListener('change', changeGroup);\n    }\n}\n"],"names":["document","addEventListener","event","addIssueElement","target","closest","SELECTORS","preventDefault","element","modal","ModalForm","formClass","args","tid","dataset","modalConfig","title","scrollable","saveButtonText","returnFocus","events","FORM_SUBMITTED","issuescreated","parseInt","detail","reloadReport","show","addIssue","revokeIssueElement","pendingPromise","triggerElement","querySelector","key","component","then","_ref","question","saveLabel","Notification","saveCancelPromise","Pending","Ajax","call","methodname","id","resolve","catch","e","type","exception","revokeIssue","regenerateFileElement","_ref2","regenerateIssueFile","groupform","node","cloneNode","replaceWith","changeGroup","report","DynamicTableSelectors","main","region","filters","params","JSON","parse","parameters","values","groupid","value","stringify"],"mappings":";;;;;;;sFAsJIA,SAASC,iBAAiB,SAASC,cAGzBC,gBAAkBD,MAAME,OAAOC,QAAQC,oBACzCH,kBACAD,MAAMK,iBA/GD,SAASC,eAChBC,MAAQ,IAAIC,mBAAU,CACxBC,UAAW,6CACXC,KAAM,CAACC,IAAKL,QAAQM,QAAQD,KAC5BE,YAAa,CAACC,OAAO,mBAAU,oBAAqB,oBAAqBC,YAAY,GACrFC,gBAAgB,mBAAU,QAC1BC,YAAaX,UAEjBC,MAAMR,iBAAiBQ,MAAMW,OAAOC,gBAAgBnB,cAC1CoB,cAAgBC,SAASrB,MAAMsB,OAAQ,IACzCF,cAAgB,mBACP,mBAAU,qBAAsB,mBAAoBA,gBAC7DG,gBACyB,IAAlBH,+BACE,mBAAU,qBAAsB,qBACzCG,gCAES,mBAAU,sBAAuB,wBAGlDhB,MAAMiB,OA4FEC,CAASxB,wBAIPyB,mBAAqB1B,MAAME,OAAOC,QAAQC,uBAC5CsB,qBACA1B,MAAMK,iBA3FE,SAASC,aACrBqB,qBACEC,eAAiBtB,QAAQH,QAAQ,aAAa0B,cAAc,yCACvD,CACP,CAACC,IAAK,UAAWC,UAAW,UAC5B,CAACD,IAAK,2BAA4BC,UAAW,oBAC7C,CAACD,IAAK,SAAUC,UAAW,sBAC5BC,MAAKC,WAAEnB,MAAOoB,SAAUC,uBAChBC,sBAAaC,kBAAkBvB,MAAOoB,SAAUC,UAAW,CAACP,eAAAA,oBACpEI,MAAK,KACJL,eAAiB,IAAIW,iBAAQ,gCACtBC,cAAKC,KAAK,CACb,CAACC,WAAY,gCAAiC/B,KAAM,CAACgC,GAAIpC,QAAQM,QAAQ8B,OAC1E,MACJV,MAAK,KACJT,eACOI,eAAegB,aACvBC,OAAOC,IACS,6BAAXA,EAAEC,4BAIOC,UAAUF,MAsEnBG,CAAYtB,2BAIVuB,sBAAwBjD,MAAME,OAAOC,QAAQC,0BAC/C6C,wBACAjD,MAAMK,iBApEU,SAASC,eAC3BsB,eAAiBtB,QAAQH,QAAQ,aAAa0B,cAAc,yCACvD,CACP,CAACC,IAAK,UAAWC,UAAW,UAC5B,CAACD,IAAK,wBAAyBC,UAAW,oBAC1C,CAACD,IAAK,aAAcC,UAAW,sBAChCC,MAAKkB,YAAEpC,MAAOoB,SAAUC,wBAChBC,sBAAaC,kBAAkBvB,MAAOoB,SAAUC,UAAW,CAACP,eAAAA,oBACpEI,MAAK,IACGO,cAAKC,KAAK,CACb,CAACC,WAAY,yCAA0C/B,KAAM,CAACgC,GAAIpC,QAAQM,QAAQ8B,SAEvFV,MAAK,IACGT,iBACRqB,OAAOC,IACS,6BAAXA,EAAEC,4BAIOC,UAAUF,MAkDnBM,CAAoBF,iCAItBG,UAAYtD,SAAS+B,cAAczB,wBACrCgD,UAAW,OAELC,KAAOD,UAAUE,WAAU,GACjCF,UAAUG,YAAYF,MAEtBA,KAAKxB,cAAczB,yBAAyBL,iBAAiB,SAAUyD,+3BApJzEpD,mBACQ,6BADRA,yBAEc,6BAFdA,sBAGW,yBAHXA,oBAIS,sBAJTA,wBAKa,2BA2FfmB,aAAe,iBACTkC,OAAS3D,SAAS+B,cAAc6B,sBAAsBC,KAAKC,eAC1D,gCAAoBH,QAAQb,MAAMR,sBAAaW,kBAOpDS,YAAc,SAASX,SACnBY,OAAS3D,SAAS+B,cAAc6B,sBAAsBC,KAAKC,YAC7DC,SAAU,uBAAWJ,QACrBK,OAASC,KAAKC,MAAMH,QAAQA,QAAQI,WAAWC,OAAO,IAC1DJ,OAAOK,QAAUtB,EAAE3C,OAAOkE,MAC1BP,QAAQA,QAAQI,WAAWC,OAAO,GAAKH,KAAKM,UAAUP,gCAC3CL,OAAQI"}